% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/check_participants.R
\name{check_participants}
\alias{check_participants}
\title{Read and Process Participant Data from CSV}
\usage{
check_participants(
  participants_df = read.csv(system.file("participants.csv", package = "dividefair")),
  var_name = "name",
  var_age = "age",
  var_group = "group",
  var_adjustment = "adjustment",
  indicator_costs = "cost_"
)
}
\arguments{
\item{participants_df}{A string. The file path to the CSV file.}

\item{var_age}{A string. The name of the age column in the CSV (default: "age").}

\item{var_group}{A string. The name of the group column in the CSV (default: "group").}

\item{var_adjustment}{A string. The name of the adjustment column in the CSV (default: "adjustment").}

\item{indicator_costs}{A string. The prefix for cost columns in the CSV (default: "cost_").}

\item{var_id}{A string. The name of the ID column in the CSV (default: "id").}

\item{var_agegroup}{A string. The name of the age group column in the CSV (default: "agegroup").}

\item{value_adults}{A string. The value to use for adult age groups (default: "adult").}

\item{value_kids}{A string. The value to use for kid age groups (default: "kid").}
}
\value{
A tibble (data frame) containing the processed participant data.
}
\description{
This function reads a CSV file containing participant data, cleans and processes it,
and returns a tidy data frame. It allows for flexible column naming and handles
various CSV structures.
}
\details{
The function performs the following operations:
\enumerate{
\item Reads the CSV file
\item Cleans column names
\item Renames columns based on user-provided names
\item Processes the age group column, categorizing into adults and kids
\item Pivots cost columns into a long format
}
}
\examples{
data_participants <- check_participants()

}
